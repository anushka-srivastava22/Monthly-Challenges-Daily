Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.

Return the sorted string. If there are multiple answers, return any of them.

class Solution {
    public String frequencySort(String s) {
        int max=Integer.MIN_VALUE,min=Integer.MAX_VALUE;
        HashMap<Character,Integer> map=new HashMap<>();
        for(int i=0;i<s.length();i++){
            map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
            max=Math.max(max,map.get(s.charAt(i)));
            min=Math.min(min,map.get(s.charAt(i)));
        }
        if(max==1 && min==1) return s;
        StringBuffer sb=new StringBuffer();
        
        for(int i=max;i>=min;i--){
            for(Map.Entry<Character,Integer> e:map.entrySet()){
                int n=e.getValue();
                if(n==i){
                    while(n>0){
                        sb.append(e.getKey());
                        n--;
                    }
                }
            }
        }
        return sb.toString(); 
    }
}
